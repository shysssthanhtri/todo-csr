name: Next.js CI

on:
  push:
    branches:
      - "*"

jobs:
  CI:

    runs-on: ubuntu-latest

    env:
        DATABASE_URL: "http://localhost:3000"
        NEXTAUTH_URL: "http://localhost:3000"
        NEXTAUTH_SECRET: "mock"
        GOOGLE_CLIENT_ID: "mock"
        GOOGLE_CLIENT_SECRET: "mock"
        NODE_ENV: "production"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prod=false

      - name: Run lint
        run: pnpm lint

      - name: Build the application
        run: pnpm build

      - name: Preview Build (Optional)
        run: pnpm start & sleep 10 && curl --fail http://localhost:3000 || exit 1


  CD:

    runs-on: ubuntu-latest
    environment: prod
    needs: CI
    if: github.ref == 'refs/heads/main'

    env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        NODE_ENV: "production"

    steps:
        -   name: Checkout code
            uses: actions/checkout@v4

        -   uses: pnpm/action-setup@v4

        -   name: Install Vercel CLI
            run: pnpm install -g vercel@latest

        -   name: Pull Vercel Environment Information
            run: vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}

        -   name: Build Project Artifacts
            run: vercel build --prod --token=${{ env.VERCEL_TOKEN }}

        -   name: Deploy Project Artifacts to Vercel
            run: vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }} --env DATABASE_URL=${{ env.DATABASE_URL }} --env NEXTAUTH_URL=${{ env.NEXTAUTH_URL }} --env NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }} --env GOOGLE_CLIENT_ID=${{ env.GOOGLE_CLIENT_ID }} --env GOOGLE_CLIENT_SECRET=${{ env.GOOGLE_CLIENT_SECRET }}
